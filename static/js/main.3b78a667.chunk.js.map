{"version":3,"sources":["Todolist.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Todolist","props","className","aria-hidden","onClick","onSelect","id","text","App","useState","input","setInputList","Items","setItems","deleteItem","olditems","filter","arrElem","index","type","placeholder","onChange","event","target","value","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iLAmBiBA,EAlBD,SAACC,GAEjB,OACA,mCACA,sBAAKC,UAAU,aAAf,UACA,mBAAGA,UAAU,cAAcC,cAAY,OACnCC,QAAS,WACLH,EAAMI,SAASJ,EAAMK,OAI7B,6BAAKL,EAAMM,aC0CIC,EAnDL,WAAK,IAAD,EACoBC,mBAAS,SAD7B,mBACHC,EADG,KACIC,EADJ,OAEaF,mBAAS,IAFtB,mBAEHG,EAFG,KAEGC,EAFH,KAaJC,EAAW,SAACR,GAEdO,GAAS,SAACE,GACN,OAAOA,EAASC,QAAO,SAACC,EAAQC,GAC5C,OAAOA,IAAQZ,SAOf,OAAQ,mCACR,qBAAKJ,UAAU,WAAf,SACA,sBAAKA,UAAU,aAAf,UACA,uBACA,4CACA,uBAEA,uBAAOiB,KAAK,OAAOC,YAAY,cAAcC,SA5BzB,SAACC,GACbX,EAAaW,EAAMC,OAAOC,QA2BgCA,MAAOd,IACzE,wBAAQN,QAzBa,WACbS,GAAS,SAACE,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAoBL,OAExBC,EAAa,KAqBrB,iBACA,6BAEKC,EAAMa,KAAI,SAACC,EAAQR,GACnB,OAAS,cAAC,EAAD,CAERX,KAAMmB,EACLpB,GAAIY,EACAb,SAAUS,GAHVI,gBC5BIS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3b78a667.chunk.js","sourcesContent":["import React from'react'\r\n const Todolist=(props)=>{\r\n    \r\nreturn (\r\n<>\r\n<div className='todo-style'>\r\n<i className=\"fa fa-times\" aria-hidden=\"true\"\r\n    onClick={()=>{\r\n        props.onSelect(props.id)\r\n    }}\r\n/>\r\n\r\n<li>{props.text}</li>\r\n</div>\r\n</>\r\n\r\n);\r\n\r\n }\r\n export default  Todolist;","import React,{useState} from 'react'\r\nimport Todolist from './Todolist'\r\n\r\nconst App=()=>{\r\n    const [input, setInputList] = useState(\"mango\");\r\n    const [Items,setItems]=useState([]);\r\n    const itemEvent=(event)=>{\r\n        setInputList(event.target.value);\r\n    }\r\n\r\n    const listOfItem=()=>{\r\n        setItems((olditems) => {\r\n            return [...olditems,input];\r\n        });\r\n        setInputList('');\r\n    }\r\n    const deleteItem=(id)=>{\r\n      \r\n        setItems((olditems)=>{\r\n            return olditems.filter((arrElem,index)=>{\r\nreturn index!==id;\r\n\r\n            })\r\n        })\r\n\r\n \r\n      }\r\nreturn( <>\r\n<div className=\"main_div\">\r\n<div className=\"center_div\">\r\n<br/>\r\n<h1>To Do List</h1>\r\n<br/>\r\n\r\n<input type=\"text\" placeholder='Add a Items' onChange={itemEvent} value={input}/>\r\n<button onClick={listOfItem}> + </button>\r\n<ol>\r\n    {/* <li>{input}</li> */}\r\n  {  Items.map((itemval,index)=>{\r\n     return   <Todolist \r\n      key={index} \r\n      text={itemval}\r\n       id={index}\r\n           onSelect={deleteItem}\r\n       />\r\n    })}\r\n</ol>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n</>)\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n    <App/>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}